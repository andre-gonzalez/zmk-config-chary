#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define RAISE   1
#define LOWER   2
#define MULTI   3

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <2>;
        bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <12>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1 2>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 8>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings =
                <&mo>,
                <&kp>;
        };
    };
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        Base {
//    ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓  ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
//    ┃    CAPSLOCK   ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┃      Q(´)     ┃      W(,)     ┃      E(.)     ┃      R(P)     ┃      T(Y)     ┃  ┃      Y(F)     ┃      U(G)     ┃      I(C)     ┃      O(R)     ┃     P(L)      ┃
//    ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
//    ┃      RALT     ┃      LALT     ┃      LCTRL    ┃     LSHIFT    ┃     LMETA     ┃  ┃     LMETA     ┃     LSHIFT    ┃     LCTRL     ┃      LALT     ┃     RALT      ┃
//    ┃      A(A)     ┃      S(O)     ┃      D(E)     ┃      F(U)     ┃      G(I)     ┃  ┃      H(D)     ┃      J(H)     ┃     K(T)      ┃      L(N)     ┃     ;(S)      ┃
//    ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┃      Z(;)     ┃      X(Q)     ┃      C(J)     ┃      V(K)     ┃      B(X)     ┃  ┃      N(B)     ┃      M(M)     ┃     ,(W)      ┃      .(V)     ┃     /(Z)      ┃
//    ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛
//                                    ┃               ┃     LOWER     ┃               ┃  ┃               ┃     RAISE     ┃               ┃
//                                    ┃      LCLK     ┃     SPACE     ┃      DEL      ┃  ┃      BSPC     ┃      RET      ┃     RCLK      ┃
//                                    ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛  ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛
            label = "Base";
            bindings = <
//    ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓  ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
//    ┃    CAPSLOCK   ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┃      Q(´)     ┃      W(,)     ┃      E(.)     ┃      R(P)     ┃      T(Y)     ┃  ┃      Y(F)     ┃      U(G)     ┃      I(C)     ┃      O(R)     ┃     P(L)      ┃
&trans  &hm CAPSLOCK Q   &kp W           &kp E           &kp R           &kp T              &kp Y           &kp U           &kp I           &kp O          &kp P            &trans
//    ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
//    ┃      RALT     ┃      LALT     ┃      LCTRL    ┃     LSHIFT    ┃     LMETA     ┃  ┃     LMETA     ┃     LSHIFT    ┃     LCTRL     ┃      LALT     ┃     RALT      ┃
//    ┃      A(A)     ┃      S(O)     ┃      D(E)     ┃      F(U)     ┃      G(I)     ┃  ┃      H(D)     ┃      J(H)     ┃     K(T)      ┃      L(N)     ┃     ;(S)      ┃
&trans   &hm RALT A      &hm LALT S      &hm LCTRL D    &hm LSHIFT F    &hm LMETA G        &hm LMETA H     &hm LSHIFT J    &hm LCTRL  K     &hm LALT L     &hm RALT SEMI   &trans
//    ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┃      Z(;)     ┃      X(Q)     ┃      C(J)     ┃      V(K)     ┃      B(X)     ┃  ┃      N(B)     ┃      M(M)     ┃     ,(W)      ┃      .(V)     ┃     /(Z)      ┃
&trans   &kp Z           &kp X           &kp C           &kp V           &kp B              &kp N           &kp M          &kp COMMA        &kp DOT        &kp FSLH        &trans
//    ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛
//                                    ┃               ┃     LOWER     ┃               ┃  ┃               ┃     RAISE     ┃               ┃
//                                    ┃      LCLK     ┃     SPACE     ┃      DEL      ┃  ┃      BSPC     ┃      RET      ┃     RCLK      ┃
                                        &mkp LCLK    &lt LOWER SPACE     &kp DEL            &kp BSPC       &lt RAISE RET  &mkp RCLK
//                                    ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛  ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛
            >;
        };

        raise_layer {
//    ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓  ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛
//                                    ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃
//                                    ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃
//                                    ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛  ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛
                        label = "Raise";
                        bindings = <
   &trans &kp CAPSLOCK   &kp F12      &kp F11       &kp F10        &kp F9         &kp N7        &kp N8         &kp N9        &kp N0          &kp BSLH        &trans
   &trans &trans      &hm LALT F8  &hm LCTRL F7  &hm LSHIFT F6  &hm LMETA F5   &hm LMETA N4  &hm LSHIFT N5  &hm LCTRL N6  &hm LALT MINUS  &hm RALT EQUAL  &trans
   &trans &trans      &kp F4       &kp F3        &kp F2         &kp F1         &kp N1        &kp N2         &kp N3        &trans          &kp STAR        &trans
                    	           &trans        &trans         &trans         &trans        &trans        &trans
                        >;
                };

        lower_layer {
//         ________________________________________________________________________________    _______________________________________________________________________________
//        |                |               |               |               |               |  |               |               |               |               |               |
//        |                |               |               |               |               |  |               |               |               |               |               |
//        |                |               |               |               |               |  |               |               |               |               |               |
//         ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|               |               |               |  |               |               |               |‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
//                                          ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        label = "Lower";
                        bindings = <
   &trans  &kp CAPSLOCK  &trans  &trans  &trans  &trans  &trans           &trans           &kp LBKT      &kp RBKT        &kp GRAVE     &trans
   &trans  &trans   &trans  &trans  &trans  &trans  &hm LMETA LEFT   &hm LSHIFT DOWN  &hm LCTRL UP  &hm LALT RIGHT  &hm RALT SQT  &trans
   &trans  &trans   &trans  &trans  &trans  &trans  &kp TAB          &kp HOME         &kp END       &kp PG_UP       &kp PG_DN     &trans
                           &trans  &trans  &trans  &trans           &trans           &trans
                        >;
                };

        multi_layer {
//    ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓  ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┃               ┃               ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃               ┃               ┃
//    ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛
//                                    ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃
//                                    ┃               ┃               ┃               ┃  ┃               ┃               ┃               ┃
//                                    ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛  ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛
                        label = "Multi";
                        bindings = <
   &trans &kp CAPSLOCK &kp C_BRI_DN     &kp C_BRI_UP      &kp C_VOL_DN             &kp C_VOL_UP      &trans  &trans  &trans  &trans  &trans  &trans
   &trans &trans      &hm LALT C_MUTE  &hm LCTRL C_PREV  &hm LSHIFT C_PLAY_PAUSE  &hm LMETA C_NEXT  &trans  &trans  &trans  &trans  &trans  &trans
   &trans &bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2             &bt BT_SEL 3      &trans  &trans  &trans  &trans  &trans  &trans
                          	       &trans            &trans                   &trans            &trans  &trans  &trans
                        >;
                };

        Mouse {
            bindings = <
   &trans  &trans  &trans     &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans     &trans
   &trans  &trans  &trans     &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans     &trans
&mkp MCLK  &trans  &trans     &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &mkp LCLK
                           &mkp LCLK  &trans  &mkp RCLK    &kp SPACE &trans  &trans
            >;
        };
    };
};
